name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PYTHON_VERSION: '3.12'

jobs:
  packages:
    name: Verify Packages
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Verify Packages
      run: |
        make packages-check

  shaders:
    name: Verify Shaders
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - run: make shaders
    - run: git diff --exit-code

  format:
    name: Check Formatting
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        cache-dependency-path: requirements-dev.txt

    - run: make install-dev
    - run: make format-check

  imports:
    name: Check Import Order
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        cache-dependency-path: requirements-dev.txt

    - run: make install-dev
    - run: make import-check

  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        cache-dependency-path: |
          requirements.txt
          requirements-dev.txt
    
    - run: make install-dev
    - run: make lint

  test:
    name: TEST
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        cache-dependency-path: |
          requirements.txt
          requirements-dev.txt

    - run: make install-dev

    - name: Setup LCOV
      uses: hrishikesh-kadam/setup-lcov@v1

    - name: Run Unit Tests With Coverage
      run: make test-xml-coverage

    - name: Generate LCOV report
      run: |
        make coverage-lcov
        sed -i "s;$PWD/;;g" reports/coverage.lcov

    - name: Publish Reports
      uses: actions/upload-artifact@v3
      with:
        name: reports
        path: reports/
 
    - name: Publish Unit Test Coverage
      uses: zgosalvez/github-actions-report-lcov@v3
      with:
        coverage-files: reports/coverage.lcov
        artifact-name: code-coverage-report
        minimum-coverage: 0
        github-token: ${{ secrets.GITHUB_TOKEN }}
        update-comment: true

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: |
          reports/TEST-*.xml
